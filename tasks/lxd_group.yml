---

# this processes a lxd group which is composed of multiple container
# guess

# - name: get list of running containers on every hosts
#   command: lxc list --format json -c ns
#   register: raw_clist

# - debug: var=lxd_containers
# - debug: var=lxd_group

# - debug: var=status
- debug: msg={{hostvars[item]['ansible_connection']}}
  with_items: "{{ groups['lxdguests'] }}"

- fail:

# - shell: |
#     curl --get {{lxd_containers['url'] ~ ':8443'}}/1.0/containers \
#          --cert ~/.config/lxc/client.crt \
#          --key ~/.config/lxc/client.key -k --silent
#   register: raw_clist

# # - debug: var=raw_clist

# - set_fact:
#     raw_clist: "{{raw_clist['stdout'] | from_json }}"

# - set_fact:
#     clist: "{{raw_clist['metadata'] }}"

# - debug: var=clist

# - include: start_containers.yml

# todo: create the alias image if absent => pull image, for the mvp we assume
# it's there
# todo: make a second loop to wait for ipv4
- name: launch containers of group '{{lxd_group["name"]}}'
  lxd_container:
    name: "{{item.name}}"
    state: "{{lxdm_state}}"
    url: "{{lxd_containers['url']}}:8443"
    source:
      type: image
      alias: "{{lxd_containers['alias']}}"
      protocol: lxd
  with_items: "{{lxd_group['containers']}}"
  register: status

# - debug: var=status
- debug: msg="'name:' {{item['item']['name']}} 'state:' {{item['invocation']['module_args']['state']}}"
  with_items: "{{status['results']}}"

# - name: create container (download image if unexisting)
#   lxd_container:
#     name: "{{item.name}}"
#     state: started
#   with_items: "{{lxd_group}}"
#   when: (lxdm_state != "absent") and (item.name not in lxcm_existing_containers.stdout)

# - name: apply container state to containers in {{lxd_group['name']}}
#   lxd_container:
#     name: "{{item.name}}"
#     state: "{{lxdm_state}}"
#   with_items: "{{lxd_group}}"

# - name: apply container state to containers in {{lxd_group['name']}}
#   lxd_container:
#     name: "{{item.name}}"
#     state: "{{lxdm_state}}"
#   with_items: "{{lxd_group}}"

#######################################
# dynamic inventory for provisionning
#######################################

- name: generate containers' inventory
  add_host:
    name: "{{item.name}} ansible_connection=lxd"
    groups: "{{lxd_group['name']}}"
  with_items: "{{lxd_group['containers']}}"
  when: lxdm_state != "absent"
  check_mode: true

- include: wait_for_ipv4_addresses.yml
  when: lxdm_state != "absent" and lxdm_state != "provision"

  with_items: "{{lxd_group['containers']}}"
# - name: generate containers' child group
#   add_host:
#     name: "{{item.0.name}}.{{lxdm_domain}}"
#     groups: "{{item.1}}"
#   with_nested:
#     - "{{lxd_group}}"
#     - "{{lxcm_child_grp}}"
#   when: lxdm_state != "absent"
